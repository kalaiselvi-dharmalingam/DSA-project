import java.util.HashMap;
import java.util.ArrayList;
import java.util.Scanner;

class Book {
    String title;
    String author;
    boolean isAvailable;

    public Book(String title, String author) {
        this.title = title;
        this.author = author;
        this.isAvailable = true;
    }

    public void borrowBook() {
        if (isAvailable) {
            isAvailable = false;
            System.out.println("You have successfully borrowed: " + title);
        } else {
            System.out.println("Sorry, this book is already borrowed.");
        }
    }

    public void returnBook() {
        isAvailable = true;
        System.out.println("You have successfully returned: " + title);
    }
}

class User {
    String name;
    ArrayList<Book> borrowedBooks;

    public User(String name) {
        this.name = name;
        this.borrowedBooks = new ArrayList<>();
    }

    public void borrowBook(Book book) {
        borrowedBooks.add(book);
    }

    public void returnBook(Book book) {
        borrowedBooks.remove(book);
    }
}

class Library {
    HashMap<String, Book> bookCatalog; // Key: book title, Value: Book object
    HashMap<String, User> users; // Key: user name, Value: User object

    public Library() {
        bookCatalog = new HashMap<>();
        users = new HashMap<>();
    }

    // Add a book to the library
    public void addBook(String title, String author) {
        if (!bookCatalog.containsKey(title)) {
            Book newBook = new Book(title, author);
            bookCatalog.put(title, newBook);
            System.out.println("Book added: " + title);
        } else {
            System.out.println("Book already exists.");
        }
    }

    // Borrow a book
    public void borrowBook(String userName, String bookTitle) {
        User user = users.getOrDefault(userName, new User(userName));
        Book book = bookCatalog.get(bookTitle);

        if (book != null && book.isAvailable) {
            book.borrowBook();
            user.borrowBook(book);
            users.put(userName, user); // Update user
        } else {
            System.out.println("Book is unavailable or doesn't exist.");
        }
    }

    // Return a book
    public void returnBook(String userName, String bookTitle) {
        User user = users.get(userName);
        Book book = bookCatalog.get(bookTitle);

        if (user != null && book != null && user.borrowedBooks.contains(book)) {
            book.returnBook();
            user.returnBook(book);
        } else {
            System.out.println("Book return failed.");
        }
    }

    // Search for a book by title
    public void searchBook(String title) {
        if (bookCatalog.containsKey(title)) {
            Book book = bookCatalog.get(title);
            String availability = book.isAvailable ? "Available" : "Not Available";
            System.out.println("Book: " + title + " by " + book.author + " is " + availability);
        } else {
            System.out.println("Book not found.");
        }
    }
}

public class LibraryManagementSystem {
    public static void main(String[] args) {
        Library library = new Library();
        Scanner scanner = new Scanner(System.in);

        library.addBook("The Alchemist", "Paulo Coelho");
        library.addBook("1984", "George Orwell");

        System.out.println("Welcome to the Library Management System");
        
        while (true) {
            System.out.println("\nChoose an option: ");
            System.out.println("1. Add Book");
            System.out.println("2. Borrow Book");
            System.out.println("3. Return Book");
            System.out.println("4. Search Book");
            System.out.println("5. Exit");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    System.out.println("Enter book title:");
                    String title = scanner.nextLine();
                    System.out.println("Enter book author:");
                    String author = scanner.nextLine();
                    library.addBook(title, author);
                    break;
                case 2:
                    System.out.println("Enter your name:");
                    String userName = scanner.nextLine();
                    System.out.println("Enter book title:");
                    String bookTitle = scanner.nextLine();
                    library.borrowBook(userName, bookTitle);
                    break;
                case 3:
                    System.out.println("Enter your name:");
                    String userNameReturn = scanner.nextLine();
                    System.out.println("Enter book title:");
                    String returnTitle = scanner.nextLine();
                    library.returnBook(userNameReturn, returnTitle);
                    break;
                case 4:
                    System.out.println("Enter book title to search:");
                    String searchTitle = scanner.nextLine();
                    library.searchBook(searchTitle);
                    break;
                case 5:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice! Try again.");
            }
        }
    }
}
